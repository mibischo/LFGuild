{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/result-table/result-table.component.css","./src/app/result-table/result-table.component.html","./src/app/result-table/result-table.component.ts","./src/app/services/clipboard.service.ts","./src/app/services/lfguild.service.ts","./src/app/utils/material.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \".progress-bar {\\r\\n    width: 100%;\\r\\n    margin-top: 8px;\\r\\n    margin-bottom: 8px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-toolbar class=\\\"mat-elevation-z6\\\" color=\\\"primary\\\">\\n  <span><strong>LFGuild</strong></span>\\n</mat-toolbar>\\n<div class=\\\"mdl-grid\\\">\\n    <form [formGroup]=\\\"optionsForm\\\" class=\\\"mdl-grid\\\" style=\\\"width: 100%\\\">\\n      <div class=\\\"mdl-cell mdl-cell--2-col\\\">\\n        <mat-form-field class=\\\"my-form-field\\\">\\n          <mat-select formControlName=\\\"language\\\" placeholder=\\\"Sprache\\\">\\n            <mat-option *ngFor=\\\"let l of languages\\\" [value]=\\\"l.value\\\">\\n              {{ l.label }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--2-col\\\">\\n        <mat-form-field class=\\\"my-form-field\\\">\\n          <mat-select formControlName=\\\"raidsPerWeek\\\" placeholder=\\\"Raids pro Woche\\\">\\n            <mat-option *ngFor=\\\"let rpw of raidsPerWeek\\\" [value]=\\\"rpw.value\\\">\\n              {{ rpw.label }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--2-col\\\">\\n        <mat-form-field class=\\\"my-form-field\\\">\\n          <mat-select formControlName=\\\"nrSites\\\" placeholder=\\\"Anz. Seiten die gescannt werden\\\">\\n            <mat-option *ngFor=\\\"let ns of nrSites\\\" [value]=\\\"ns.value\\\">\\n              {{ ns.label }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--2-col\\\" style=\\\"padding-top: 16px\\\"> \\n        <div class=\\\"my-form-field\\\">\\n          <span style=\\\"margin-right: 16px;\\\">ordnen nach:</span>\\n          <mat-radio-group formControlName=\\\"orderBy\\\">\\n            <mat-radio-button style=\\\"margin-right: 8px;\\\" value=\\\"ts\\\">Zeit</mat-radio-button>\\n            <mat-radio-button style=\\\"margin-right: 8px;\\\" value=\\\"sc\\\">Score</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--4-col\\\" style=\\\"padding-top: 16px\\\">\\n      </div>\\n    </form>\\n  </div>\\n<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--1-col\\\">\\n    <button mat-raised-button color=\\\"primary\\\" style=\\\"margin-left: 8px\\\" (click)=\\\"startScan()\\\">WowProgress neu laden</button>  \\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--11-col\\\">\\n    automatisch nachladen in &nbsp;\\n    <mat-form-field style=\\\"width: 50px\\\">\\n      <mat-select [(value)]=\\\"selectedReloadInterval\\\">\\n        <mat-option *ngFor=\\\"let m of minutes\\\" [value]=\\\"m\\\">\\n          {{ m }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    &nbsp; Minuten &nbsp;<mat-slide-toggle (change)=\\\"onReloadChange($event)\\\"></mat-slide-toggle>\\n    &nbsp; letztes Update: {{ lastUpdate | date:'HH:mm:ss' }}\\n  </div>\\n</div>\\n<mat-progress-bar *ngIf=\\\"isLoading\\\" class=\\\"progress-bar\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n\\n\\n<!-- <div class=\\\"mdl-grid mdl-cell mdl-cell--12-col\\\"> -->\\n  <app-result-table style=\\\"width: 100%\\\" [dataSource]=\\\"data | async\\\"></app-result-table>\\n<!-- </div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { LfguildService } from './services/lfguild.service';\nimport { Observable } from 'rxjs';\nimport { MatSlideToggleChange } from '@angular/material';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  \n  languages = [\n    { value: '', label: 'alle' },\n    { value: 'de', label: 'Deutsch' },\n    { value: 'en', label: 'Englisch' },\n  ];\n\n  raidsPerWeek = [\n    { value: 0, label: 'egal'},\n    { value: 1, label: '1 Raid/Woche'},\n    { value: 2, label: '2 Raids/Woche'},\n    { value: 3, label: '3 Raids/Woche'},\n    { value: 4, label: '4 Raids/Woche'},\n    { value: 5, label: '5 Raids/Woche'},\n    { value: 6, label: '6 Raids/Woche'},\n    { value: 7, label: '7 Raids/Woche'},\n  ];\n\n  nrSites = [\n    { value: 1, label: '1' },\n    { value: 2, label: '2' },\n    { value: 3, label: '3' },\n    { value: 4, label: '4' },\n    { value: 5, label: '5' },\n    { value: 6, label: '6' },\n    { value: 7, label: '7' },\n    { value: 8, label: '8' },\n    { value: 9, label: '9' },\n    { value: 10, label: '10' },\n  ];\n\n  minutes = [ 1, 3, 5, 10, 15, 20, 25, 30];\n\n  optionsForm: FormGroup;\n  data: Observable<any[]>;\n  selectedReloadInterval: number = 5;\n  reloadTimer: any;\n  reloadChecked: boolean = false;\n  lastUpdate: Date;\n  isLoading: boolean = false;\n\n  constructor(private fb: FormBuilder, private lfgService: LfguildService) {\n    this.buildForm();\n  }\n\n  ngOnInit(): void {\n  }\n\n  buildForm() {\n    let group: any = {};\n\n    group['language'] = new FormControl('de', Validators.required);\n    group['raidsPerWeek'] = new FormControl(3, Validators.required);\n    group['nrSites'] = new FormControl(1, Validators.required);\n    group['orderBy'] = new FormControl('ts', Validators.required);\n\n    this.optionsForm = new FormGroup(group);\n  }\n\n  startScan() {\n    console.log(\"loading data\");\n    this.lastUpdate = new Date();\n    this.isLoading = true;\n    this.data = this.lfgService.get(this.optionsForm.value);\n    this.data.subscribe(() => {\n      this.isLoading = false;\n    })\n  }\n\n  onReloadChange(change: MatSlideToggleChange) {\n    if (change.checked) {\n      console.log(\"reload scheduled\")\n      this.reloadTimer = setInterval(() => { \n        this.startScan();\n      }, this.selectedReloadInterval * 60 * 1000); //this.selectedReloadInterval * 60 * 1000);\n    } else {\n      console.log(\"reload cancled\")\n      clearInterval(this.reloadTimer);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { HttpModule } from '@angular/http';\n\n\nimport { AppComponent } from './app.component';\nimport { MyMaterialModule } from './utils/material.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ResultTableComponent } from './result-table/result-table.component';\nimport { LfguildService } from './services/lfguild.service';\nimport { ClipboardService } from './services/clipboard.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ResultTableComponent\n  ],\n  imports: [\n    BrowserModule,\n    MyMaterialModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpModule,\n  ],\n  providers: [\n    LfguildService,\n    ClipboardService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \".class-deathknight {\\r\\n    background-color: rgba(196, 31, 59, 0.8);\\r\\n}\\r\\n\\r\\n.class-demonhunter {\\r\\n    background-color: rgba(163, 48, 201, 0.8);\\r\\n}\\r\\n\\r\\n.class-druid {\\r\\n    background-color: rgba(255, 125, 10, 0.8);\\r\\n}\\r\\n\\r\\n.class-hunter {\\r\\n    background-color: rgba(171, 212, 115, 0.8);\\r\\n}\\r\\n\\r\\n.class-mage {\\r\\n    background-color: rgba(105, 204, 240, 0.8);\\r\\n}\\r\\n\\r\\n.class-monk {\\r\\n    background-color: rgba(0, 132, 103, 0.8);\\r\\n}\\r\\n\\r\\n.class-paladin {\\r\\n    background-color: rgba(245, 140, 186, 0.8);\\r\\n}\\r\\n\\r\\n.class-priest {\\r\\n    background-color: rgba(255, 255, 255, 0.8);\\r\\n}\\r\\n\\r\\n.class-rogue {\\r\\n    background-color: rgba(255, 245, 105, 0.8);\\r\\n}\\r\\n\\r\\n.class-shaman {\\r\\n    background-color: rgba(36, 89, 255, 0.8);\\r\\n}\\r\\n\\r\\n.class-warlock {\\r\\n    background-color: rgba(148, 130, 202, 0.8);\\r\\n}\\r\\n\\r\\n.class-warrior {\\r\\n    background-color: rgba(199, 156, 110, 0.8);\\r\\n}\\r\\n\\r\\n.faction-column {\\r\\n    -webkit-box-flex: 0.3;\\r\\n        -ms-flex: 0.3;\\r\\n            flex: 0.3;\\r\\n}\\r\\n\\r\\n.name-column {\\r\\n    -webkit-box-flex: 0.7;\\r\\n        -ms-flex: 0.7;\\r\\n            flex: 0.7;\\r\\n}\\r\\n\\r\\n.ilvl-column {\\r\\n    -webkit-box-flex: 0.5;\\r\\n        -ms-flex: 0.5;\\r\\n            flex: 0.5;\\r\\n}\\r\\n\\r\\n.charlink-column {\\r\\n    -webkit-box-flex: 0.5;\\r\\n        -ms-flex: 0.5;\\r\\n            flex: 0.5;\\r\\n}\\r\\n\\r\\n.race-column {\\r\\n    -webkit-box-flex: 0.7;\\r\\n        -ms-flex: 0.7;\\r\\n            flex: 0.7;\\r\\n}\\r\\n\\r\\n.class-column {\\r\\n    -webkit-box-flex: 0.7;\\r\\n        -ms-flex: 0.7;\\r\\n            flex: 0.7;\\r\\n}\\r\\n\\r\\n.transfer-column {\\r\\n    -webkit-box-flex: 0.7;\\r\\n        -ms-flex: 0.7;\\r\\n            flex: 0.7;\\r\\n}\\r\\n\\r\\n.raidsPerWeek-column {\\r\\n    -webkit-box-flex: 0.5;\\r\\n        -ms-flex: 0.5;\\r\\n            flex: 0.5;\\r\\n}\\r\\n\\r\\n.specs-column {\\r\\n    -webkit-box-flex: 1.5;\\r\\n        -ms-flex: 1.5;\\r\\n            flex: 1.5;\\r\\n}\\r\\n\\r\\n.pveScore-column {\\r\\n    -webkit-box-flex: 0.5;\\r\\n        -ms-flex: 0.5;\\r\\n            flex: 0.5;\\r\\n}\\r\\n\\r\\n.mPlusScore-column {\\r\\n    -webkit-box-flex: 0.5;\\r\\n        -ms-flex: 0.5;\\r\\n            flex: 0.5;\\r\\n}\\r\\n\\r\\n.export-column {\\r\\n    -webkit-box-flex: 0.2;\\r\\n        -ms-flex: 0.2;\\r\\n            flex: 0.2;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/result-table/result-table.component.css\n// module id = ./src/app/result-table/result-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mdl-grid\\\" style=\\\"margin-left: 8px\\\">\\n  <mat-expansion-panel class=\\\"mdl-cell mdl-cell--12-col\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        <b>Filter</b>\\n      </mat-panel-title>\\n    </mat-expansion-panel-header>\\n\\n    <div class=\\\"mdl-grid\\\">\\n      <div class=\\\"mdl-cell mdl-cell--2-col\\\">\\n        <mat-form-field class=\\\"my-form-field\\\">\\n          <mat-select placeholder=\\\"Server\\\" [(value)]=\\\"selectedServers\\\" (selectionChange)=\\\"onFilter()\\\" multiple>\\n            <mat-option *ngFor=\\\"let s of servers\\\" [value]=\\\"s\\\">\\n              {{ s }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--2-col\\\">\\n        <mat-form-field class=\\\"my-form-field\\\">\\n          <mat-select placeholder=\\\"Klasse\\\" [(value)]=\\\"selectedClasses\\\" (selectionChange)=\\\"onFilter()\\\" multiple>\\n            <mat-option *ngFor=\\\"let c of classes\\\" [value]=\\\"c\\\">\\n              {{ c }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--2-col\\\">\\n        <mat-form-field class=\\\"my-form-field\\\">\\n          <mat-select placeholder=\\\"Transfer\\\" [(value)]=\\\"selectedTransfer\\\" (selectionChange)=\\\"onFilter()\\\" multiple>\\n            <mat-option *ngFor=\\\"let t of transfer\\\" [value]=\\\"t\\\">\\n              {{ t }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell--2-col\\\">\\n        <mat-form-field class=\\\"my-form-field\\\">\\n          <mat-select placeholder=\\\"Specs\\\" [(value)]=\\\"selectedSpecs\\\" (selectionChange)=\\\"onFilter()\\\" multiple>\\n            <mat-option *ngFor=\\\"let s of specs\\\" [value]=\\\"s\\\">\\n              {{ s }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell-2-col\\\">\\n        <mat-form-field class=\\\"my-form-field\\\">\\n          <mat-select placeholder=\\\"minimales ILvl\\\" [(value)]=\\\"selectedIlvl\\\" (selectionChange)=\\\"onFilter()\\\">\\n            <mat-option *ngFor=\\\"let l of ilvls\\\" [value]=\\\"l\\\">\\n              {{ l }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"mdl-cell mdl-cell-2-col\\\"></div>\\n    </div>\\n  </mat-expansion-panel>\\n</div>\\n<div class=\\\"mdl-grid\\\" >\\n  <div class=\\\"mdl-cell mdl-cell--12-col mat-elevation-z2\\\">\\n    <mat-table #table [dataSource]=\\\"_dataSource\\\" matSort>\\n        \\n      <!--- Note that these columns can be defined in any order.\\n            The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n      <ng-container matColumnDef=\\\"faction\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"faction-column\\\"> <b>Faction</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"faction-column\\\">\\n          <img *ngIf=\\\"row.faction == 'horde'\\\" src=\\\"assets/wow-horde-icon.png\\\" width=\\\"24px\\\">\\n          <img *ngIf=\\\"row.faction == 'alliance'\\\" src=\\\"assets/wow-alliance-icon.png\\\" width=\\\"24px\\\">\\n        </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"name-column\\\"> <b>Name</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"name-column\\\"> {{row.name}} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"server\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"server-column\\\"> <b>Server</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"server-column\\\"> {{row.server }} </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"ilvl\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"ilvl-column\\\"> <b>Item-Level</b> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" class=\\\"ilvl-column\\\"> {{row.ilvl }} </mat-cell>\\n        </ng-container>\\n\\n      <ng-container matColumnDef=\\\"guild\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"guild-column\\\"> <b>Guild</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"guild-column\\\"> \\n          <a href=\\\"https://www.wowprogress.com{{row.guildlink}}\\\" target=\\\"_blank\\\"><b>{{row.guild}}</b></a> \\n        </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"charlink\\\">\\n        <mat-header-cell *matHeaderCellDef class=\\\"charlink-column\\\"> <b>Links</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"charlink-column\\\"> \\n          <a href=\\\"https://www.wowprogress.com{{row.charlink}}\\\" target=\\\"_blank\\\"><img width=\\\"24px\\\" src=\\\"favicon.ico\\\"></a> \\n          <a href=\\\"https://www.warcraftlogs.com{{row.charlink}}\\\" target=\\\"_blank\\\"><img width=\\\"24px\\\" src=\\\"assets/warcraftlogs-icon.png\\\"></a>\\n          <a href=\\\"{{row.armory}}\\\" target=\\\"_blank\\\"><img width=\\\"24px\\\" src=\\\"assets/wow-icon.png\\\"></a>\\n        </mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"timestamp\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"timestamp-column\\\"> <b>Zuletzt aktualisiert</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"timestamp-column\\\">{{row.timestamp | date: 'MMM d, y, HH:mm:ss'}}</mat-cell>\\n      </ng-container>\\n\\n      <!-- <ng-container matColumnDef=\\\"race\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"race-column\\\"> <b>Volk</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"race-column\\\">{{row.race }}</mat-cell>\\n      </ng-container> -->\\n\\n      <!-- <ng-container matColumnDef=\\\"class\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"class-column\\\"> <b>Klasse</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"class-column\\\">{{row.clazz }}</mat-cell>\\n      </ng-container> -->\\n\\n      <ng-container matColumnDef=\\\"battletag\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"battletag-column\\\"> <b>Battletag</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"battletag-column\\\">{{row.battletag }}</mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"languages\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"languages-column\\\"> <b>Sprachen</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"languages-column\\\">{{row.languages }}</mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"transfer\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"transfer-column\\\"> <b>Transfer</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"transfer-column\\\">{{row.transfer }}</mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"raidsPerWeek\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"raidsPerWeek-column\\\"> <b>Raids/Woche</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"raidsPerWeek-column\\\">{{row.raidsPerWeek }}</mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"specs\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"specs-column\\\"> <b>Specs</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"specs-column\\\">{{row.specs }}</mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"pveScore\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"pveScore-column\\\"> <b>PvE Score</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"pveScore-column\\\">{{row.pveScore }}</mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"mPlusScore\\\">\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"mPlusScore-column\\\"> <b>M+ Score</b> </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"mPlusScore-column\\\">{{row.mPlusScore }}</mat-cell>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"export\\\">\\n        <mat-header-cell *matHeaderCellDef class=\\\"export-column\\\"></mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" class=\\\"export-column\\\"><button mat-icon-button (click)=\\\"copyToClipboard(row)\\\"><mat-icon>content_copy</mat-icon></button></mat-cell>\\n      </ng-container>\\n\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row [ngClass]=\\\"'class-'+row.clazz.replace(' ', '')\\\" *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/result-table/result-table.component.html\n// module id = ./src/app/result-table/result-table.component.html\n// module chunks = main","import { Component, OnInit, Input, ViewChild, AfterViewInit } from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { testdata } from './testdata';\nimport { MatSort, MatTableDataSource } from '@angular/material';\nimport { ClipboardService } from '../services/clipboard.service';\n\n@Component({\n  selector: 'app-result-table',\n  templateUrl: './result-table.component.html',\n  styleUrls: ['./result-table.component.css']\n})\nexport class ResultTableComponent implements OnInit, AfterViewInit {\n\n  displayedColumns = ['faction', 'name', 'server', 'ilvl', 'specs', 'pveScore', 'mPlusScore', 'battletag', 'guild', 'charlink', 'raidsPerWeek', 'transfer', 'languages', 'timestamp', 'export'];\n  _dataSource = new MatTableDataSource([]);\n  data: any[];\n  classes: string[];\n  servers: string[];\n  transfer: string[];\n  specs: string[];\n  ilvls: number[] = [ 950, 955, 960, 965, 970, 975, 980, 985, 990 ];\n\n  selectedServers;\n  selectedClasses;\n  selectedTransfer;\n  selectedSpecs;\n  selectedIlvl;\n  \n  @ViewChild(MatSort) sort: MatSort;\n\n  @Input('dataSource') set dataSource(value: any[]) {\n    if (value) {\n      this._dataSource = new MatTableDataSource(value);\n      this.data = value;\n      this._dataSource.sort = this.sort;\n      this.classes = this.getClasses(value);\n      this.servers = this.getServers(value);\n      this.transfer = this.getTransfers(value);\n      this.specs = this.getSpecs(value);\n\n      this.onFilter();\n    }\n  };\n\n  constructor(private clipboardService: ClipboardService) { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit(): void {\n    this._dataSource.sort = this.sort;\n  }\n\n  getClasses(result: any[]) {\n    let res: string[] = new Array();\n\n    result.forEach(r => {\n      if (res.findIndex(e => e == r.clazz) == -1) {\n        res.push(r.clazz);\n      }\n    });\n\n    return res;\n  }\n\n  getServers(result: any[]) {\n    let res: string[] = new Array();\n\n    result.forEach(r => {\n      if (res.findIndex(e => e == r.server) == -1) {\n        res.push(r.server);\n      }\n    });\n\n    return res;\n  }\n\n  getTransfers(result: any[]) {\n    let res: string[] = new Array();\n\n    result.forEach(r => {\n      if (res.findIndex(e => e == r.transfer) == -1) {\n        res.push(r.transfer);\n      }\n    });\n\n    return res;\n  }\n\n  getSpecs(result: any[]) {\n    let res: string[] = new Array();\n\n    result.forEach(r => {\n      let specs: string[] = r.specs.split(',');\n\n      specs.forEach(element => {\n        if (res.findIndex(r => r == element.trim()) == -1) {\n          res.push(element.trim());\n        }\n      });      \n    });\n\n    return res;\n  }\n\n  copyToClipboard(row: any) {\n    let text: string = '';\n\n    text += row.name + ' ' + row.server + ' \\n';\n    text += row.clazz + ' ' + row.specs + ' \\n';\n    text += row.transfer + ' \\n';\n    text += 'PvE Score: ' + row.pveScore + ' \\n';\n    text += 'M+ Score: ' + row.mPlusScore + ' \\n';\n    text += 'Gilde: https://www.wowprogress.com' + row.guildlink + ' \\n';\n    text += 'WowProgress: https://www.wowprogress.com' + row.charlink + ' \\n';\n    text += 'Logs: https://www.warcraftlogs.com' + row.charlink + ' \\n';\n    text += 'Armory: ' + row.armory + ' \\n' ;\n\n    this.clipboardService.copy(text);\n  }\n\n  onFilter() {\n    let filtered = this.data;\n    let remove = new Array();\n    filtered.forEach(d => {\n      if (this.selectedServers && this.selectedServers.length > 0) {\n        let rem = true;\n\n        this.selectedServers.forEach(s => {\n          if (d.server == s) {\n            rem = false;\n          }\n        });\n\n        if (rem) {\n          remove.push(d);\n        }\n      }\n\n      if (this.selectedClasses && this.selectedClasses.length > 0) {\n        let rem = true;\n\n        this.selectedClasses.forEach(c => {\n          if (d.clazz == c) {\n            rem = false;\n          }\n        });\n\n        if (rem) {\n          remove.push(d);\n        }\n      }\n\n      if (this.selectedTransfer && this.selectedTransfer.length > 0) {\n        let rem = true;\n\n        this.selectedTransfer.forEach(t => {\n          if (d.transfer == t) {\n            rem = false;\n          }\n        });\n\n        if (rem) {\n          remove.push(d);\n        }\n      }\n\n      if (this.selectedSpecs && this.selectedSpecs.length > 0) {\n        let rem = true;\n\n        this.selectedSpecs.forEach(s => {\n          if (d.specs.includes(s)) {\n            rem = false;\n          }\n        });\n\n        if (rem) {\n          remove.push(d);\n        }\n      }\n\n      if (this.selectedIlvl) {\n        let rem = true;\n\n        if (+d.ilvl > this.selectedIlvl) {\n          rem = false;\n        }\n\n        if (rem) {\n          remove.push(d);\n        }\n      }\n    });\n\n    remove.forEach(r => {\n      filtered = filtered.filter(obj => obj != r);\n    });\n\n    this._dataSource = new MatTableDataSource(filtered);\n    this._dataSource.sort = this.sort;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/result-table/result-table.component.ts","// Import the core angular services.\nimport { DOCUMENT } from \"@angular/platform-browser\";\nimport { Inject } from \"@angular/core\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class ClipboardService {\n\n    private dom: Document;\n\n\n    // I initialize the Clipboard service.\n    // --\n    // CAUTION: This service is tightly couped to the browser DOM (Document Object Model).\n    // But, by injecting the \"document\" reference rather than trying to reference it\n    // globally, we can at least pretend that we are trying to lower the tight coupling.\n    constructor( @Inject( DOCUMENT ) dom: Document ) {\n\n        this.dom = dom;\n\n    }\n\n\n    // ---\n    // PUBLIC METHODS.\n    // ---\n\n    // I copy the given value to the user's system clipboard. Returns a promise that\n    // resolves to the given value on success or rejects with the raised Error.\n    public copy( value: string ) {\n      var textarea = null;\n\n      try {\n\n          // In order to execute the \"Copy\" command, we actually have to have\n          // a \"selection\" in the currently rendered document. As such, we're\n          // going to inject a Textarea element and .select() it in order to\n          // force a selection.\n          // --\n          // NOTE: This Textarea is being rendered off-screen.\n          textarea = this.dom.createElement( \"textarea\" );\n          textarea.style.height = \"0px\";\n          textarea.style.left = \"-100px\";\n          textarea.style.opacity = \"0\";\n          textarea.style.position = \"fixed\";\n          textarea.style.top = \"-100px\";\n          textarea.style.width = \"0px\";\n          this.dom.body.appendChild( textarea );\n\n          // Set and select the value (creating an active Selection range).\n          textarea.value = value;\n          textarea.select();\n\n          // Ask the browser to copy the current selection to the clipboard.\n          this.dom.execCommand( \"copy\" );\n      } finally {\n\n          // Cleanup - remove the Textarea from the DOM if it was injected.\n          if ( textarea && textarea.parentNode ) {\n\n              textarea.parentNode.removeChild( textarea );\n\n          }\n\n      }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/clipboard.service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class LfguildService {\n\n  constructor(private http: Http) { }\n\n  get(options: any): Observable<any[]> {\n    return this.http.get('/api/getlfg?language=' + options.language +  '&raidsPerWeek=' + options.raidsPerWeek + '&nrSites=' + options.nrSites + '&orderBy=' + options.orderBy).map(res => res.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/lfguild.service.ts","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatStepperModule,\r\n  MatIconRegistry,\r\n} from '@angular/material';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\n\r\n@NgModule({\r\n    exports: [\r\n        CdkTableModule,\r\n        MatAutocompleteModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule\r\n    ]\r\n})\r\nexport class MyMaterialModule {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/utils/material.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}